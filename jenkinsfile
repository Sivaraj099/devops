pipeline {
    agent any

    environment {
        AWS_REGION = "ap-south-1"
        AWS_ACCOUNT_ID = "193501891521"
        ECR_REGISTRY = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
    }

    stages {
        stage('Checkout') {
            steps {
                echo "==== Checking out source code from GitHub ===="
                git branch: 'main', 
                    credentialsId: 'github-pat', 
                    url: 'https://github.com/Sivaraj099/devops.git'
            }
        }

        stage('Build Frontend Image') {
            steps {
                script {
                    withAWS(region: "${AWS_REGION}", credentials: 'aws-creds') {
                        sh '''
                        echo "==== Building & Pushing Frontend Image to ECR ===="
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}
                        docker build -t frontend ./frontend
                        docker tag frontend:latest ${ECR_REGISTRY}/frontend:latest
                        docker push ${ECR_REGISTRY}/frontend:latest
                        '''
                    }
                }
            }
        }

        stage('Build Backend Image') {
            steps {
                script {
                    withAWS(region: "${AWS_REGION}", credentials: 'aws-creds') {
                        sh '''
                        echo "==== Building & Pushing Backend Image to ECR ===="
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}
                        docker build -t backend ./backend
                        docker tag backend:latest ${ECR_REGISTRY}/backend:latest
                        docker push ${ECR_REGISTRY}/backend:latest
                        '''
                    }
                }
            }
        }

        stage('Run Containers (Temporary Deployment)') {
            steps {
                script {
                    sh '''
                    echo "==== Running Frontend & Backend Containers on EC2 ===="
                    
                    # Stop old containers if running
                    docker stop frontend || true && docker rm frontend || true
                    docker stop backend || true && docker rm backend || true

                    # Run new containers
                    docker run -d -p 80:80 --name frontend ${ECR_REGISTRY}/frontend:latest
                    docker run -d -p 5000:5000 --name backend ${ECR_REGISTRY}/backend:latest
                    '''
                }
            }
        }
    }
}
